/*
 * This source file was generated by the Gradle 'init' task
 */
package org.ticket.booking;

import org.ticket.booking.entities.Ticket;
import org.ticket.booking.entities.Train;
import org.ticket.booking.entities.User;
import org.ticket.booking.services.TrainService;
import org.ticket.booking.services.UserBooking;
import org.ticket.booking.utils.UserServiceUtil;


import java.io.IOException;
import java.util.*;

public class App {

    public static void main(String[] args) throws IOException {
        System.out.println("Running the system.");
        Scanner sc = new Scanner(System.in);
        int option = 0; Train trainSelected = null; boolean isLoggedIn = false;
        String source="", dest=""; User logger = null;

        UserBooking service;
        try {
            service = new UserBooking();
        } catch(IOException e) {
            throw new RuntimeException(e.getMessage());
        }

        while(option != 7) {
            System.out.println("Choose option");
            System.out.println("1. Sign up");
            System.out.println("2. Log in");
            System.out.println("3. View Tickets");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a Seat");
            System.out.println("6. Cancel my Booking");
            System.out.println("7. Exit the App");
            option = sc.nextInt();

            switch(option) {
                case 1: System.out.println("Username: ");
                        String username = sc.next();
                        System.out.println("Password: ");
                        String password = sc.next();
                        User user = new User(username, password,
                                UserServiceUtil.hashPassword(password),
                                new ArrayList<Ticket>(),
                                UUID.randomUUID().toString());
                        service.signUp(user);
                        System.out.println("Signup successful. Welcome "+username);
                        break;
                case 2: System.out.println("Login username: ");
                        String loginUsername = sc.next();
                        System.out.println("Login password: ");
                        String loginPassword = sc.next();
                        logger = new User(loginUsername, loginPassword,
                                UserServiceUtil.hashPassword(loginPassword),
                                new ArrayList<Ticket>(),
                                UUID.randomUUID().toString());
                        try {
                            service = new UserBooking(logger);
                            isLoggedIn = service.loginUser();
                            System.out.println(isLoggedIn ? "Login successful!" : "Login failed. Check username/password");
                        } catch (IOException e) {
                            System.out.println("Error while logging in");
                        }
                    break;
                case 3: System.out.println("Fetching Bookings");
                            service.fetchBooking();
                        break;

                case 4: // search trains
                    System.out.println("Type your source station");
                    source = sc.next();
                    System.out.println("Type your destination station");
                    dest = sc.next();
                    List<Train> trains = service.getTrains(source, dest);
                    System.out.println(trains);
                    int index = 1;
                    System.out.println(trains.size() + " trains found.");
                    for (Train t: trains){
                        System.out.println(index++ +".) Train No: "+t.getTrainNo()+"\t"+t.getTrainName());
                        Map<String, String> stationTimes = t.getStationTimes();
                        System.out.printf("Departure --> %s -- %s%n", source, stationTimes.get(source));
                        System.out.printf("Arrival --> %s -- %s%n", dest, stationTimes.get(dest));
                    }
                    System.out.println("Select a train by typing 1,2,3...");
                    int select = sc.nextInt();
                    trainSelected = trains.get(--select);
                    System.out.println("Train selected: "+trainSelected.getTrainInfo());
                    break;
                case 5:
                    if(trainSelected == null) System.out.println("No train selected.");
                    else if (!isLoggedIn) System.out.println("User not logged in.");
                    else {
                        System.out.println("Select a seat: ");
                        List<List<Integer>> seats = service.fetchSeats(trainSelected);
                        for (List<Integer> row : seats) {
                            for (Integer val : row) {
                                System.out.print(val + " ");
                            }
                            System.out.println();
                        }
                        System.out.println("Select the seat by typing the row and column");
                        System.out.println("Enter the row");
                        int row = sc.nextInt();
                        System.out.println("Enter the column");
                        int col = sc.nextInt();
                        System.out.println("Booking your seat....");
                        Ticket booked = service.bookTrainSeat(trainSelected, row, col, logger, source, dest);
                        if (booked != null) {
                            System.out.println("Booked! Enjoy your journey");
                            List<Ticket> tickets = logger.getTicketsBooked();
                            tickets.add(booked);
                            logger.setTicketsBooked(tickets);
                            service.saveUserList();
                        } else {
                            System.out.println("Can't book this seat");
                        }
                    }
                    break;
                default:
                    break;
            }
        }
    }
}
